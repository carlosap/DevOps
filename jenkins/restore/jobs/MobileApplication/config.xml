<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.40">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.83">
    <script>node 
{   cleanWs() 
    def GRADLE_HOME = tool name: &apos;Gradle6.6&apos;, type: &apos;gradle&apos;
	stage(&apos;Git pull&apos;)
	{
		git branch: &apos;master&apos;, credentialsId: &apos;mastergit&apos;, url: &apos;https://HALNextGenProject@dev.azure.com/HALNextGenProject/HALNextGen/_git/HALNextGen&apos;
	}
	dir(&apos;DevOpsProjects/Mobile/Android/HolandAmerica/HelloWorldApp&apos;) 
	{
		stage(&quot;SonarQube&quot;)
		{ 
	    //def GRADLE_HOME = tool name: &apos;Gradle6.6&apos;, type: &apos;gradle&apos;
		withGradle() 
		{	
				sh &quot;chmod +x gradlew&quot;
				withSonarQubeEnv(credentialsId: &apos;SonarQube&apos;) 
				{
					sh&apos;./gradlew sonarqube -Dsonar.host.url=http://40.76.192.10:9000 -Dsonar.login=fba9d6a52b93378dc621ec36ed6f0801e0edcb53&apos;
				} 
		}
		}  
		    stage(&quot;Build&quot;)
			{   
				sh &quot;ls -al&quot;
		//	  def GRADLE_HOME = tool name: &apos;Gradle6.6&apos;, type: &apos;gradle&apos;
			    withGradle() 
				{
			        sh &quot;chmod +x gradlew&quot;
			        sh &quot;./gradlew clean&quot;
			        sh &quot;./gradlew build&quot; 
			            
			    }
			}
			stage(&quot;Compile&quot;) 
			{ 
				archiveArtifacts artifacts: &quot;**/*.apk&quot;, fingerprint: true, onlyIfSuccessful: true 
				
			}
			stage(&quot;JFROG&quot;)
			{
			  sh &apos;curl -u admin:Capgemini@123 -T app/build/outputs/apk/debug/app-debug.apk &quot;http://40.76.192.10:8081/artifactory/generic-local/generic-local/app-debug.apk&quot; &apos;
			}
		
	}
}
	</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>